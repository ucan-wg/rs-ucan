name: ðŸ§ª Tests and Checks

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain:
          - stable
          - nightly
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Smarter caching action, speeds up build times compared to regular cache:
      # https://github.com/Swatinem/rust-cache
      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: clippy, rustfmt

      - name: Check Format
        run: cargo +${{ matrix.rust-toolchain }} fmt --all -- --check

      - name: Run Linter
        run: cargo +${{ matrix.rust-toolchain }} clippy --all -- -D warnings

      - name: Install Cargo Audit
        if: ${{ matrix.rust-toolchain == 'stable' }}
        run: cargo install --force cargo-audit

      - name: Run Audit on Deps
        if: ${{ matrix.rust-toolchain == 'stable' }}
        run: cargo-audit audit

      # Only "test" release build on push event.
      - name: Test Release
        if: ${{ matrix.rust-toolchain == 'stable' && github.event_name == 'push' }}
        run: cargo build --release

  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain:
          - stable
          - nightly
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Environment Packages
        run: |
          sudo apt-get update -qqy
          sudo apt-get install jq

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-toolchain }}

      - name: Run Tests
        run: cargo test --all

  run-headless-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [ ucan, ucan-key-support ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Run Rust Headless Browser Tests
        working-directory: ${{ matrix.crate }}
        run: wasm-pack test --headless --chrome
